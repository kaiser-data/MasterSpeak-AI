name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Create test environment file
      run: |
        cat > .env.testing << EOF
        ENV=testing
        DATABASE_URL=sqlite:///./test_data/masterspeak_test.db
        OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
        SECRET_KEY=test-secret-key-for-ci-only
        RESET_SECRET=test-reset-secret-for-ci-only
        VERIFICATION_SECRET=test-verification-secret-for-ci-only
        ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8000
        JWT_LIFETIME_SECONDS=3600
        DEBUG=false
        # Rate limiting configuration for CI E2E testing
        RATE_LIMIT_ENABLED=true
        RATE_LIMIT_DEFAULT=50/minute
        RATE_LIMIT_AUTH=8/minute
        RATE_LIMIT_ANALYSIS=15/minute
        RATE_LIMIT_UPLOAD=10/minute
        RATE_LIMIT_HEALTH=200/minute
        REDIS_URL=redis://redis:6379/0
        EOF

    - name: Start services
      run: |
        docker compose -f docker-compose.e2e.yml up -d backend frontend redis
        sleep 30

    - name: Wait for services to be healthy
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:8000/health; do sleep 2; done'
        timeout 60 bash -c 'until curl -f http://localhost:3000; do sleep 2; done'

    - name: Security checks before E2E tests
      run: |
        echo "🔍 Running pre-test security checks..."
        
        # Check for exposed secrets in environment
        if grep -r "AKIAI\|AKIA[0-9A-Z]{16}" . --exclude-dir=.git || \
           grep -r "sk-[a-zA-Z0-9]{48}" . --exclude-dir=.git || \
           grep -r "ghp_[a-zA-Z0-9]{36}" . --exclude-dir=.git; then
          echo "❌ Potential secrets detected in codebase"
          exit 1
        fi
        
        # Check services are using secure configurations
        echo "✅ Pre-test security checks passed"

    - name: Run E2E tests
      run: |
        docker compose -f docker-compose.e2e.yml run --rm e2e-tests

    - name: Security validation during tests
      run: |
        echo "🔍 Validating security during test execution..."
        
        # Check if services are responding securely
        if curl -I http://localhost:8000/health | grep -i "x-frame-options\|x-content-type-options"; then
          echo "✅ Security headers detected"
        else
          echo "⚠️ Consider adding security headers"
        fi

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: e2e-test-results
        path: |
          e2e/test-results/
          e2e/playwright-report/
        retention-days: 7

    - name: Upload HTML report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: e2e/playwright-report/
        retention-days: 7

    - name: Collect logs
      if: failure()
      run: |
        docker compose -f docker-compose.e2e.yml logs backend > backend-logs.txt
        docker compose -f docker-compose.e2e.yml logs frontend > frontend-logs.txt

    - name: Upload logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: service-logs
        path: |
          backend-logs.txt
          frontend-logs.txt
        retention-days: 3

    - name: Clean up
      if: always()
      run: |
        docker compose -f docker-compose.e2e.yml down -v
        docker system prune -f